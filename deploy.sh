#!/bin/bash

# üöÄ Script de d√©ploiement cloud rapide
# Usage: ./deploy.sh [netlify|vercel|github]

echo "üöÄ D√©ploiement de votre application 100% cloud..."

# Couleurs pour les messages
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "package.json" ]; then
    echo "‚ùå Erreur: Ex√©cutez ce script depuis la racine du projet"
    exit 1
fi

# Build de production
print_status "Construction de l'application..."
npm run build

if [ $? -eq 0 ]; then
    print_success "Build r√©ussi !"
else
    echo "‚ùå Erreur lors du build"
    exit 1
fi

# V√©rifier que le dossier dist existe
if [ ! -d "dist" ]; then
    echo "‚ùå Erreur: Le dossier dist n'existe pas"
    exit 1
fi

print_success "Dossier dist cr√©√© avec succ√®s !"

# Afficher les options de d√©ploiement
echo ""
echo "üéØ Options de d√©ploiement disponibles :"
echo "1. Netlify (Recommand√© - Gratuit et simple)"
echo "2. Vercel (Alternative - Gratuit)"
echo "3. GitHub Pages (Gratuit avec GitHub)"
echo "4. Manuel (Upload du dossier dist/)"
echo ""

# Si un argument est fourni, utiliser cette option
if [ $# -eq 1 ]; then
    DEPLOY_OPTION=$1
else
    read -p "Choisissez une option (1-4): " DEPLOY_OPTION
fi

case $DEPLOY_OPTION in
    1|netlify)
        print_status "D√©ploiement sur Netlify..."
        echo ""
        echo "üìã Instructions pour Netlify :"
        echo "1. Allez sur https://netlify.com"
        echo "2. Cr√©ez un compte ou connectez-vous"
        echo "3. Glissez-d√©posez le dossier 'dist/' dans la zone de d√©ploiement"
        echo "4. Ou connectez votre repo GitHub pour un d√©ploiement automatique"
        echo ""
        echo "üîß Variables d'environnement √† ajouter dans Netlify :"
        echo "VITE_SUPABASE_URL=https://gcrmagqcfdkouvxdmetq.supabase.co"
        echo "VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imdjcm1hZ3FjZmRrb3V2eGRtZXRxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY2NzA0NzEsImV4cCI6MjA3MjI0NjQ3MX0.ldh_7ybh_yGyEB2h2wcroikF6bCOdpuNxwN1CI-l9Zo"
        ;;
    2|vercel)
        print_status "D√©ploiement sur Vercel..."
        echo ""
        echo "üìã Instructions pour Vercel :"
        echo "1. Installez Vercel CLI: npm i -g vercel"
        echo "2. Ex√©cutez: vercel --prod"
        echo "3. Suivez les instructions √† l'√©cran"
        echo ""
        echo "üîß Variables d'environnement √† ajouter dans Vercel :"
        echo "VITE_SUPABASE_URL=https://gcrmagqcfdkouvxdmetq.supabase.co"
        echo "VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imdjcm1hZ3FjZmRrb3V2eGRtZXRxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY2NzA0NzEsImV4cCI6MjA3MjI0NjQ3MX0.ldh_7ybh_yGyEB2h2wcroikF6bCOdpuNxwN1CI-l9Zo"
        ;;
    3|github)
        print_status "D√©ploiement sur GitHub Pages..."
        echo ""
        echo "üìã Instructions pour GitHub Pages :"
        echo "1. Cr√©ez un repo GitHub"
        echo "2. Uploadez le contenu du dossier 'dist/'"
        echo "3. Activez GitHub Pages dans les settings du repo"
        echo "4. Configurez les variables d'environnement si possible"
        ;;
    4|manuel)
        print_status "D√©ploiement manuel..."
        echo ""
        echo "üìÅ Le dossier 'dist/' est pr√™t pour upload :"
        echo "   - Taille: $(du -sh dist | cut -f1)"
        echo "   - Fichiers: $(find dist -type f | wc -l)"
        echo ""
        echo "üîß N'oubliez pas de configurer les variables d'environnement :"
        echo "VITE_SUPABASE_URL=https://gcrmagqcfdkouvxdmetq.supabase.co"
        echo "VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imdjcm1hZ3FjZmRrb3V2eGRtZXRxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY2NzA0NzEsImV4cCI6MjA3MjI0NjQ3MX0.ldh_7ybh_yGyEB2h2wcroikF6bCOdpuNxwN1CI-l9Zo"
        ;;
    *)
        echo "‚ùå Option invalide"
        exit 1
        ;;
esac

echo ""
print_success "üéâ Votre application est pr√™te pour le d√©ploiement cloud !"
echo ""
echo "üìä R√©sum√© de votre solution 100% cloud :"
echo "   ‚úÖ Frontend: React + Vite (dossier dist/ pr√™t)"
echo "   ‚úÖ Backend: Supabase (d√©j√† configur√©)"
echo "   ‚úÖ Base de donn√©es: PostgreSQL (d√©j√† configur√©)"
echo "   ‚úÖ Authentification: Supabase Auth (d√©j√† configur√©)"
echo "   ‚úÖ Stockage: Supabase Storage (d√©j√† configur√©)"
echo "   ‚úÖ API: REST auto-g√©n√©r√©e (d√©j√† configur√©)"
echo "   ‚úÖ Temps r√©el: WebSockets (d√©j√† configur√©)"
echo ""
echo "üöÄ Il ne vous reste plus qu'√† d√©ployer le frontend !"
